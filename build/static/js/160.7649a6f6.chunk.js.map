{"version":3,"file":"static/js/160.7649a6f6.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/Appointment/AppointmentItem.module.css?cee1","components/Appointment/AppointmentItem.js","webpack://react-complete-guide/./src/components/Appointment/AppointmentList.module.css?1495","components/Appointment/AppointmentList.js","webpack://react-complete-guide/./src/components/Appointment/NoAppointmentsFound.module.css?2b15","components/Appointment/NoAppointmentsFound.js","pages/AllAppointments.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"AppointmentItem_item__WjRDy\"};","import { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect} from \"react\";\r\n\r\nimport classes from \"./AppointmentItem.module.css\";\r\nimport { getAllAppointments, getSingleAppointment } from \"../../lib/api\";\r\nimport useHttp from \"../../hooks/use-http\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\n\r\nconst AppointmentItem = (props) => {\r\n  const [userAppointments, setUserAppointments] = useState([]);\r\n  const [isDeleted, setIsDeleted] = useState(false);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const currentTime = Date().toLocaleString();\r\n  localStorage.setItem(\"timeStamp\", currentTime);\r\n\r\n  const url = `https://webapp-appointments-default-rtdb.firebaseio.com/appointments/${props.localId}/${props.id}.json`;\r\n  //const url2 = `https://webapp-appointments-default-rtdb.firebaseio.com/appointments/${props.localId}.json`;\r\n\r\n  const { status } = useHttp(getSingleAppointment);\r\n\r\n  const {\r\n    data: loadedAppointments,\r\n    error,\r\n  } = useHttp(getAllAppointments, true);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.replace(`/appointments/${props.localId}`);\r\n    }\r\n    // if (setIsDeleted(true)) {\r\n    //   fetch(url, {\r\n    //     method: \"GET\",\r\n    //   });\r\n    // }\r\n    //setUserAppointments(loadedAppointments);\r\n  }, [status, history, props.localId]);\r\n\r\n  const deleteHandler = async (event) => {\r\n    event.preventDefault();\r\n    history.push({ pathname: location.pathname });\r\n    try {\r\n      const response = await fetch(url, {\r\n        method: \"DELETE\",\r\n      })\r\n      .then(response => response.json())\r\n        .then(()=> {\r\n        setUserAppointments((prevAppointments) =>\r\n          prevAppointments.filter((appointment) => appointment.id !== props.id)\r\n        );\r\n        window.location.reload(false); //temporary fix\r\n      })\r\n    } catch (error) {\r\n      console.error(\"Error deleting Item: \", error);\r\n    }\r\n  };\r\n\r\n  // const fetchAppointments = async () => {\r\n  //   //event.preventDefault();\r\n  //   if (isDeleted) {\r\n  //     try {\r\n  //       const response = await fetch(url2);\r\n  //       const data = await response.json();\r\n  //       setUserAppointments(data);\r\n  //       //history.replace(`/appointments/${props.localId}`);\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching appointments: \", error);\r\n  //     }\r\n  //   }\r\n  // };\r\n  // //},[url2, history]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchAppointments();\r\n  // }, [isDeleted]);\r\n\r\n  function finishEnteringHandler() {\r\n    setIsDeleted(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.form} onSubmit={deleteHandler}>\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n        <li className={classes.item}>\r\n          <figure>\r\n            <figcaption>User Id: {props.localId}</figcaption>\r\n            <time>\r\n              {props.timeStamp} {props.updatedTime}{\" \"}\r\n            </time>\r\n            <blockquote>\r\n              <p>{props.date}</p>\r\n              <p>{props.startTime + \" - \" + props.endTime}</p>\r\n            </blockquote>\r\n            <figcaption>{props.name}</figcaption>\r\n            <figcaption>{props.description}</figcaption>\r\n          </figure>\r\n          <button>\r\n            <Link\r\n              className=\"btn\"\r\n              to={`/appointment/${props.localId}/${props.id}`}\r\n            >\r\n              edit\r\n            </Link>\r\n          </button>\r\n          <button className=\"btn\" onClick={finishEnteringHandler}>\r\n            delete\r\n          </button>\r\n        </li>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AppointmentList_list__Boyws\",\"sorting\":\"AppointmentList_sorting__-At9z\"};","import { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport AppointmentItem from \"./AppointmentItem\";\r\nimport classes from \"./AppointmentList.module.css\";\r\n\r\nconst sortAppointments = (appointments, ascending) => {\r\n  return appointments.sort((appointmentA, appointmentB) => {\r\n    if (ascending) {\r\n      return appointmentA.id > appointmentB.id ? 1 : -1;\r\n    } else {\r\n      return appointmentA.id < appointmentB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst AppointmentList = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\r\n\r\n  const sortedAppointments = sortAppointments(\r\n    props.appointments,\r\n    isSortAscending\r\n  );\r\n\r\n  function changeSortingHandler() {\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `?sort=${isSortAscending ? \"desc\" : \"asc\"}`,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {isSortAscending ? \"Descending\" : \"Ascending\"}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedAppointments.map((appointment) => (\r\n          <AppointmentItem\r\n            localId={appointment.localId}\r\n            key={appointment.id}\r\n            id={appointment.id}\r\n            name={appointment.name}\r\n            date={appointment.date}\r\n            startTime={appointment.startTime}\r\n            endTime={appointment.endTime}\r\n            description={appointment.description}\r\n            timeStamp={appointment.timeStamp}\r\n            updatedTime={appointment.updatedTime}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppointmentList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoAppointmentsFound_noquotes__xP4i0\"};","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './NoAppointmentsFound.module.css';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { useContext } from 'react';\r\n\r\nconst NoAppointmentsFound = (props) => {\r\n  const authCtx = useContext(AuthContext) \r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No Appointments found!</p>\r\n      <Link className='btn'to={`/newAppointment/${authCtx.localId}`}  >\r\n        Add an Appointment\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoAppointmentsFound;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllAppointments } from \"../lib/api\";\r\nimport AppointmentList from \"../components/Appointment/AppointmentList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoAppointmentsFound from \"../components/Appointment/NoAppointmentsFound\";\r\nimport AuthContext from \"../store/auth-context\";\r\n\r\nfunction AllAppointments(props) {\r\n  const authCtx = useContext(AuthContext);\r\n  const params = useParams();\r\n\r\n  const { userId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedAppointments,\r\n    error,\r\n  } = useHttp(getAllAppointments, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(userId);\r\n  }, [sendRequest, userId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedAppointments || loadedAppointments.length === 0)\r\n  ) {\r\n    return <NoAppointmentsFound />;\r\n  }\r\n\r\n  return (\r\n    <AppointmentList appointments={loadedAppointments} uid={authCtx.localId} />\r\n  );\r\n}\r\n\r\nexport default AllAppointments;\r\n"],"names":["props","useState","setUserAppointments","setIsDeleted","history","useHistory","location","useLocation","currentTime","Date","toLocaleString","localStorage","setItem","url","localId","id","status","useHttp","getSingleAppointment","getAllAppointments","data","error","useEffect","replace","deleteHandler","event","preventDefault","push","pathname","fetch","method","then","response","json","prevAppointments","filter","appointment","window","reload","console","className","classes","onSubmit","isLoading","LoadingSpinner","timeStamp","updatedTime","date","startTime","endTime","name","description","to","onClick","appointments","ascending","isSortAscending","URLSearchParams","search","get","sortedAppointments","sort","appointmentA","appointmentB","Fragment","map","authCtx","useContext","AuthContext","userId","useParams","sendRequest","loadedAppointments","length","uid"],"sourceRoot":""}