{"version":3,"file":"static/js/160.28cd9629.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/Appointment/AppointmentItem.module.css?cee1","components/Appointment/AppointmentItem.js","webpack://react-complete-guide/./src/components/Appointment/AppointmentList.module.css?1495","components/Appointment/AppointmentList.js","webpack://react-complete-guide/./src/components/Appointment/NoAppointmentsFound.module.css?2b15","components/Appointment/NoAppointmentsFound.js","pages/AllAppointments.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"AppointmentItem_item__WjRDy\"};","import { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport classes from \"./AppointmentItem.module.css\";\r\nimport { getSingleAppointment } from \"../../lib/api\";\r\nimport useHttp from \"../../hooks/use-http\";\r\n\r\nconst AppointmentItem = (props) => {\r\n  const [userAppointments, setUserAppointments] = useState([]);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const currentTime = Date().toLocaleString();\r\n  localStorage.setItem(\"timeStamp\", currentTime);\r\n\r\n  const { status } = useHttp(getSingleAppointment);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.replace(`/appointments/${props.localId}`);\r\n    }\r\n  }, [status, history, props.localId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"RENDERING APPOINTMENTS\", userAppointments);\r\n  }, [userAppointments]);\r\n\r\n  const deleteHandler = async (event) => {\r\n    event.preventDefault();\r\n    history.push({ pathname: location.pathname });\r\n\r\n    await fetch(\r\n      `https://webapp-appointments-default-rtdb.firebaseio.com/appointments/${props.localId}/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then((response) => {\r\n      setUserAppointments((prevAppointments) =>\r\n        prevAppointments.filter((appointment) => appointment.id !== props.id)\r\n      );\r\n      //window.location.reload(false); //temporary fix\r\n      //return response;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <li className={classes.item}>\r\n        <figure>\r\n          <figcaption>User Id: {props.localId}</figcaption>\r\n          <time>\r\n            {props.timeStamp} {props.updatedTime}{\" \"}\r\n          </time>\r\n          <blockquote>\r\n            <p>{props.date}</p>\r\n            <p>{props.startTime + \" - \" + props.endTime}</p>\r\n          </blockquote>\r\n          <figcaption>{props.name}</figcaption>\r\n          <figcaption>{props.description}</figcaption>\r\n        </figure>\r\n        <button>\r\n          <Link\r\n            className=\"btn\"\r\n            to={`/appointment/${props.localId}/${props.id}`}\r\n          >\r\n            edit\r\n          </Link>\r\n        </button>\r\n        <button className=\"btn\" onClick={deleteHandler}>\r\n          delete\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppointmentItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"AppointmentList_list__Boyws\",\"sorting\":\"AppointmentList_sorting__-At9z\"};","import { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport AppointmentItem from \"./AppointmentItem\";\r\nimport classes from \"./AppointmentList.module.css\";\r\n\r\nconst sortAppointments = (appointments, ascending) => {\r\n  return appointments.sort((appointmentA, appointmentB) => {\r\n    if (ascending) {\r\n      return appointmentA.id > appointmentB.id ? 1 : -1;\r\n    } else {\r\n      return appointmentA.id < appointmentB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst AppointmentList = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isSortAscending = queryParams.get(\"sort\") === \"asc\";\r\n\r\n  const sortedAppointments = sortAppointments(\r\n    props.appointments,\r\n    isSortAscending\r\n  );\r\n\r\n  function changeSortingHandler() {\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `?sort=${isSortAscending ? \"desc\" : \"asc\"}`,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.sorting}>\r\n        <button onClick={changeSortingHandler}>\r\n          Sort {isSortAscending ? \"Descending\" : \"Ascending\"}\r\n        </button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedAppointments.map((appointment) => (\r\n          <AppointmentItem\r\n            localId={appointment.localId}\r\n            key={appointment.id}\r\n            id={appointment.id}\r\n            name={appointment.name}\r\n            date={appointment.date}\r\n            startTime={appointment.startTime}\r\n            endTime={appointment.endTime}\r\n            description={appointment.description}\r\n            timeStamp={appointment.timeStamp}\r\n            updatedTime={appointment.updatedTime}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppointmentList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoAppointmentsFound_noquotes__xP4i0\"};","import { Link } from 'react-router-dom';\r\n\r\nimport classes from './NoAppointmentsFound.module.css';\r\nimport AuthContext from '../../store/auth-context';\r\nimport { useContext } from 'react';\r\n\r\nconst NoAppointmentsFound = (props) => {\r\n  const authCtx = useContext(AuthContext) \r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No Appointments found!</p>\r\n      <Link className='btn'to={`/newAppointment/${authCtx.localId}`}  >\r\n        Add an Appointment\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoAppointmentsFound;\r\n","import { useContext, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllAppointments } from \"../lib/api\";\r\nimport AppointmentList from \"../components/Appointment/AppointmentList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoAppointmentsFound from \"../components/Appointment/NoAppointmentsFound\";\r\nimport AuthContext from \"../store/auth-context\";\r\n\r\nfunction AllAppointments(props) {\r\n  const authCtx = useContext(AuthContext);\r\n  const params = useParams();\r\n\r\n  const { userId } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedAppointments,\r\n    error,\r\n  } = useHttp(getAllAppointments, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(userId);\r\n  }, [sendRequest, userId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (\r\n    status === \"completed\" &&\r\n    (!loadedAppointments || loadedAppointments.length === 0)\r\n  ) {\r\n    return <NoAppointmentsFound />;\r\n  }\r\n\r\n  return (\r\n    <AppointmentList appointments={loadedAppointments} uid={authCtx.localId} />\r\n  );\r\n}\r\n\r\nexport default AllAppointments;\r\n"],"names":["props","useState","userAppointments","setUserAppointments","history","useHistory","location","useLocation","currentTime","Date","toLocaleString","localStorage","setItem","status","useHttp","getSingleAppointment","useEffect","replace","localId","console","log","deleteHandler","event","preventDefault","push","pathname","fetch","id","method","then","response","prevAppointments","filter","appointment","className","classes","timeStamp","updatedTime","date","startTime","endTime","name","description","to","onClick","appointments","ascending","isSortAscending","URLSearchParams","search","get","sortedAppointments","sort","appointmentA","appointmentB","Fragment","map","authCtx","useContext","AuthContext","userId","useParams","getAllAppointments","sendRequest","loadedAppointments","data","error","LoadingSpinner","length","uid"],"sourceRoot":""}